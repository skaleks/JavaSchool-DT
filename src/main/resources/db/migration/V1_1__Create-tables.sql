-- Options
drop table if exists public.OPTIONS cascade;
create table public.OPTIONS (
    OPTION_ID int4 generated by default as identity,
    COST float8,
    NAME varchar(255) not null,
    DESCRIPTION varchar(255),
    PRICE float8,
    STATUS int4 not null,
    primary key (OPTION_ID),
    constraint "UK_tfbgtqhajtk1vu7a3240e606k" unique (NAME)
);
TRUNCATE public.OPTIONS;

-- Tariffs
drop table if exists public.TARIFFS cascade;
create table public.TARIFFS (
    TARIFF_ID int4 generated by default as identity,
    NAME varchar(255) not null,
    PRICE float8 not null,
    STATUS varchar(255) not null,
    DESCRIPTION varchar(255),
    primary key (TARIFF_ID),
    constraint "UK_2fvbdkejjpoa49qcgy7urjhlk" unique (NAME)
);
TRUNCATE public.TARIFFS;

-- Users
drop table if exists public.USERS cascade;
create table public.USERS (
    USER_ID int4 generated by default as identity,
    ADDRESS varchar(255) not null,
    BALANCE float8,
    BIRTH_DATE date not null,
    EMAIL varchar(255) not null,
    FIRST_NAME varchar(255) not null,
    LAST_NAME varchar(255) not null,
    LOGIN varchar(255) not null,
    PASSPORT varchar(255) not null,
    PASSWORD varchar(255) not null,
    ROLE varchar(255) not null,
    STATUS varchar(255) not null,
    primary key (USER_ID),
    constraint "UK_81nqioeq3njjrwqaltk2mcobj"
        unique (EMAIL),
    constraint "UK_l3c3ahdulnjx8bt2ivgyvh1ss"
        unique (LOGIN)
);
TRUNCATE public.USERS;

-- Contracts
drop table if exists public.CONTRACTS cascade;
create table public.CONTRACTS (
    CONTRACT_ID int4 generated by default as identity,
    NUMBER varchar(255) not null,
    PRICE float8 not null,
    STATUS int4 not null,
    tariff_TARIFF_ID int4,
    user_USER_ID int4,
    primary key (CONTRACT_ID),
    constraint "UK_asidbcgtx8rvy5i4yh6nvc0uj"
        unique (NUMBER),
    constraint "FK745yra73ldae3cwb1hl5sib13"
        foreign key (tariff_TARIFF_ID)
            references public.TARIFFS,
    constraint "FKm8ec133ahf125tc7cfseefohw"
        foreign key (user_USER_ID)
            references public.USERS
);
TRUNCATE public.CONTRACTS;

-- Tariff option
drop table if exists TARIFF_OPTION cascade;
create table TARIFF_OPTION (
    TARIFF_ID int4 not null,
    OPTION_ID int4 not null,
    primary key (TARIFF_ID, OPTION_ID),
    constraint "FK5ibd4vln4uq6skhafr55eck4f"
        foreign key (OPTION_ID)
            references public.OPTIONS,
    constraint "FKeqom5bomwns8tdqwycallp9dw"
        foreign key (TARIFF_ID)
            references public.TARIFFS
);
TRUNCATE TARIFF_OPTION;

-- Contract options
drop table if exists CONTRACT_OPTIONS cascade;
create table CONTRACT_OPTIONS (
    CONTRACT_ID int4 not null,
    OPTION_ID int4 not null,
    primary key (CONTRACT_ID, OPTION_ID),
    constraint "FK17gwgj98ya19s8i42pchi1qel"
        foreign key (CONTRACT_ID)
            references public.CONTRACTS,
    constraint "FKqsaivgs18ei2xlstug5ps7rma"
        foreign key (OPTION_ID)
            references public.OPTIONS
);
TRUNCATE CONTRACT_OPTIONS;

-- Related options
drop table if exists RELATED_OPTIONS cascade;
create table RELATED_OPTIONS (
    OPTION_ID int4 not null,
    RELATED_OPTION_ID int4 not null,
    primary key (OPTION_ID, RELATED_OPTION_ID),
    constraint "FKcyb8pvvdvkcorxa7kxd27ugup"
        foreign key (RELATED_OPTION_ID)
            references public.OPTIONS,
    constraint "FKlbicigfbiukndqrxdbdvwnli8"
        foreign key (OPTION_ID)
            references public.OPTIONS
);
TRUNCATE RELATED_OPTIONS;


-- Lead options
drop table if exists LEAD_OPTIONS cascade;
create table LEAD_OPTIONS (
    OPTION_ID int4 not null,
    RELATED_FOR int4 not null unique,
    primary key (OPTION_ID, RELATED_FOR),
    constraint "FKbgduebw1v3yhvfxas3kjwxjdt"
        foreign key (RELATED_FOR)
            references public.OPTIONS,
    constraint "FKegtxdpkgshaso86hf763jehrb"
        foreign key (OPTION_ID)
            references public.OPTIONS
);
TRUNCATE LEAD_OPTIONS;

-- Excluding options
drop table if exists EXCLUDING_OPTIONS cascade;
create table EXCLUDING_OPTIONS (
    OPTION_ID int4 not null,
    EXCLUDING_OPTION_ID int4 not null,
    primary key (OPTION_ID, EXCLUDING_OPTION_ID),
    constraint "FKevjqjlllufrk4wbcmsexjyl2y"
        foreign key (EXCLUDING_OPTION_ID)
            references public.OPTIONS,
    constraint "FK4nyebpwd3h0wo8ibix0flo5jy"
        foreign key (OPTION_ID)
            references public.OPTIONS
);
TRUNCATE EXCLUDING_OPTIONS;
